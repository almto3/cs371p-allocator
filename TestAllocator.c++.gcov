        -:    0:Source:TestAllocator.c++
        -:    0:Graph:TestAllocator.gcno
        -:    0:Data:TestAllocator.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// ------------------------------------
        -:    2:// projects/allocator/TestAllocator1.c++
        -:    3:// Copyright (C) 2015
        -:    4:// Glenn P. Downing
        -:    5:// ------------------------------------
        -:    6:
        -:    7:// --------
        -:    8:// includes
        -:    9:// --------
        -:   10:
        -:   11:#include <algorithm> // count
        -:   12:#include <memory>    // allocator
        -:   13:
        -:   14:#include "gtest/gtest.h"
        -:   15:
        -:   16:#include "Allocator.h"
        -:   17:
        -:   18:// --------------
        -:   19:// TestAllocator1
        -:   20:// --------------
        -:   21:
        -:   22:template <typename A>
function _ZN14TestAllocator1ISaIiEED0Ev called 0 returned 0% blocks executed 0%
function _ZN14TestAllocator1ISaIiEED2Ev called 2 returned 100% blocks executed 75%
function _ZN14TestAllocator1ISaIiEEC2Ev called 2 returned 100% blocks executed 100%
function _ZN14TestAllocator1ISaIdEED0Ev called 0 returned 0% blocks executed 0%
function _ZN14TestAllocator1ISaIdEED2Ev called 2 returned 100% blocks executed 75%
function _ZN14TestAllocator1ISaIdEEC2Ev called 2 returned 100% blocks executed 100%
function _ZN14TestAllocator1I9AllocatorIiLm100EEED0Ev called 0 returned 0% blocks executed 0%
function _ZN14TestAllocator1I9AllocatorIiLm100EEED2Ev called 2 returned 100% blocks executed 75%
function _ZN14TestAllocator1I9AllocatorIiLm100EEEC2Ev called 2 returned 100% blocks executed 100%
function _ZN14TestAllocator1I9AllocatorIdLm100EEED0Ev called 0 returned 0% blocks executed 0%
function _ZN14TestAllocator1I9AllocatorIdLm100EEED2Ev called 2 returned 100% blocks executed 75%
function _ZN14TestAllocator1I9AllocatorIdLm100EEEC2Ev called 2 returned 100% blocks executed 100%
       16:   23:struct TestAllocator1 : testing::Test {
call    0 never executed
call    1 never executed
call    2 returned 100%
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
call    6 returned 100%
call    7 never executed
call    8 never executed
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
call   13 returned 100%
call   14 never executed
call   15 never executed
call   16 returned 100%
branch 17 taken 0% (fallthrough)
branch 18 taken 100%
call   19 never executed
call   20 returned 100%
call   21 never executed
call   22 never executed
call   23 returned 100%
branch 24 taken 0% (fallthrough)
branch 25 taken 100%
call   26 never executed
call   27 returned 100%
        -:   24:    // --------
        -:   25:    // typedefs
        -:   26:    // --------
        -:   27:
        -:   28:    typedef          A             allocator_type;
        -:   29:    typedef typename A::value_type value_type;
        -:   30:    typedef typename A::size_type  size_type;
        -:   31:    typedef typename A::pointer    pointer;};
        -:   32:
        -:   33:typedef testing::Types<
        -:   34:            std::allocator<int>,
        -:   35:            std::allocator<double>,
        -:   36:            Allocator<int,    100>,
        -:   37:            Allocator<double, 100> >
        -:   38:        my_types_1;
        -:   39:
        -:   40:TYPED_TEST_CASE(TestAllocator1, my_types_1);
        -:   41:
function _ZN26TestAllocator1_test_1_TestISaIiEE8TestBodyEv called 1 returned 100% blocks executed 53%
function _ZN26TestAllocator1_test_1_TestISaIdEE8TestBodyEv called 1 returned 100% blocks executed 53%
function _ZN26TestAllocator1_test_1_TestI9AllocatorIiLm100EEE8TestBodyEv called 1 returned 100% blocks executed 19%
function _ZN26TestAllocator1_test_1_TestI9AllocatorIdLm100EEE8TestBodyEv called 1 returned 100% blocks executed 19%
function _ZN26TestAllocator1_test_1_TestISaIiEED0Ev called 1 returned 100% blocks executed 100%
function _ZN26TestAllocator1_test_1_TestISaIiEED2Ev called 1 returned 100% blocks executed 75%
function _ZN26TestAllocator1_test_1_TestISaIdEED0Ev called 1 returned 100% blocks executed 100%
function _ZN26TestAllocator1_test_1_TestISaIdEED2Ev called 1 returned 100% blocks executed 75%
function _ZN26TestAllocator1_test_1_TestI9AllocatorIiLm100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN26TestAllocator1_test_1_TestI9AllocatorIiLm100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN26TestAllocator1_test_1_TestI9AllocatorIdLm100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN26TestAllocator1_test_1_TestI9AllocatorIdLm100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN26TestAllocator1_test_1_TestISaIiEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN26TestAllocator1_test_1_TestISaIdEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN26TestAllocator1_test_1_TestI9AllocatorIiLm100EEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN26TestAllocator1_test_1_TestI9AllocatorIdLm100EEEC2Ev called 1 returned 100% blocks executed 100%
       17:   42:TYPED_TEST(TestAllocator1, test_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
call   12 returned 100%
call   13 returned 100%
call   14 returned 100%
branch 15 taken 0% (fallthrough)
branch 16 taken 100%
call   17 never executed
call   18 returned 100%
call   19 returned 100%
call   20 returned 100%
branch 21 taken 0% (fallthrough)
branch 22 taken 100%
call   23 never executed
call   24 returned 100%
call   25 returned 100%
call   26 returned 100%
call   27 returned 100%
call   28 returned 100%
        -:   43:    typedef typename TestFixture::allocator_type allocator_type;
        -:   44:    typedef typename TestFixture::value_type     value_type;
        -:   45:    typedef typename TestFixture::size_type      size_type;
        -:   46:    typedef typename TestFixture::pointer        pointer;
        -:   47:
        4:   48:          allocator_type x;
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0% (throw)
call    5 returned 100%
branch  6 taken 100% (fallthrough)
branch  7 taken 0% (throw)
        4:   49:    const size_type      s = 1;
        4:   50:    const value_type     v = 2;
        4:   51:    const pointer        p = x.allocate(s);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
        4:   52:    if (p != nullptr) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
        2:   53:        x.construct(p, v);
call    0 returned 100%
call    1 returned 100%
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
        6:   54:        ASSERT_EQ(v, *p);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 never executed
call   24 never executed
call   25 never executed
call   26 returned 100%
branch 27 taken 100% (fallthrough)
branch 28 taken 0% (throw)
call   29 returned 100%
branch 30 taken 0% (fallthrough)
branch 31 taken 100%
call   32 never executed
branch 33 never executed
branch 34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
call   38 never executed
branch 39 never executed
branch 40 never executed
call   41 never executed
branch 42 never executed
branch 43 never executed
call   44 never executed
call   45 never executed
call   46 returned 100%
branch 47 taken 100%
branch 48 taken 0%
call   49 never executed
call   50 never executed
call   51 never executed
call   52 never executed
branch 53 never executed
branch 54 never executed
call   55 never executed
branch 56 never executed
branch 57 never executed
call   58 never executed
branch 59 never executed
branch 60 never executed
call   61 never executed
branch 62 never executed
branch 63 never executed
call   64 never executed
branch 65 never executed
branch 66 never executed
call   67 never executed
branch 68 never executed
branch 69 never executed
call   70 never executed
call   71 never executed
call   72 never executed
branch 73 never executed
branch 74 never executed
call   75 never executed
call   76 never executed
call   77 never executed
call   78 never executed
branch 79 never executed
branch 80 never executed
call   81 never executed
branch 82 never executed
branch 83 never executed
call   84 never executed
branch 85 never executed
branch 86 never executed
call   87 never executed
branch 88 never executed
branch 89 never executed
call   90 never executed
branch 91 never executed
branch 92 never executed
call   93 never executed
branch 94 never executed
branch 95 never executed
call   96 never executed
call   97 never executed
call   98 never executed
branch 99 never executed
branch 100 never executed
call   101 never executed
call   102 never executed
call   103 never executed
        2:   55:        x.destroy(p);
call    0 returned 100%
call    1 returned 100%
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
        2:   56:        x.deallocate(p, s);}}
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100%
branch  3 taken 0%
call    4 never executed
call    5 returned 100%
call    6 returned 100%
branch  7 taken 100%
branch  8 taken 0%
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
        -:   57:
function _ZN27TestAllocator1_test_10_TestISaIiEE8TestBodyEv called 1 returned 100% blocks executed 58%
function _ZN27TestAllocator1_test_10_TestISaIdEE8TestBodyEv called 1 returned 100% blocks executed 58%
function _ZN27TestAllocator1_test_10_TestI9AllocatorIiLm100EEE8TestBodyEv called 1 returned 100% blocks executed 13%
function _ZN27TestAllocator1_test_10_TestI9AllocatorIdLm100EEE8TestBodyEv called 1 returned 100% blocks executed 13%
function _ZN27TestAllocator1_test_10_TestISaIiEED0Ev called 1 returned 100% blocks executed 100%
function _ZN27TestAllocator1_test_10_TestISaIiEED2Ev called 1 returned 100% blocks executed 75%
function _ZN27TestAllocator1_test_10_TestISaIdEED0Ev called 1 returned 100% blocks executed 100%
function _ZN27TestAllocator1_test_10_TestISaIdEED2Ev called 1 returned 100% blocks executed 75%
function _ZN27TestAllocator1_test_10_TestI9AllocatorIiLm100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN27TestAllocator1_test_10_TestI9AllocatorIiLm100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN27TestAllocator1_test_10_TestI9AllocatorIdLm100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN27TestAllocator1_test_10_TestI9AllocatorIdLm100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN27TestAllocator1_test_10_TestISaIiEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN27TestAllocator1_test_10_TestISaIdEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN27TestAllocator1_test_10_TestI9AllocatorIiLm100EEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN27TestAllocator1_test_10_TestI9AllocatorIdLm100EEEC2Ev called 1 returned 100% blocks executed 100%
       17:   58:TYPED_TEST(TestAllocator1, test_10) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
call   12 returned 100%
call   13 returned 100%
call   14 returned 100%
branch 15 taken 0% (fallthrough)
branch 16 taken 100%
call   17 never executed
call   18 returned 100%
call   19 returned 100%
call   20 returned 100%
branch 21 taken 0% (fallthrough)
branch 22 taken 100%
call   23 never executed
call   24 returned 100%
call   25 returned 100%
call   26 returned 100%
call   27 returned 100%
call   28 returned 100%
        -:   59:    typedef typename TestFixture::allocator_type allocator_type;
        -:   60:    typedef typename TestFixture::value_type     value_type;
        -:   61:    typedef typename TestFixture::size_type      size_type;
        -:   62:    typedef typename TestFixture::pointer        pointer;
        -:   63:
        4:   64:          allocator_type  x;
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0% (throw)
call    5 returned 100%
branch  6 taken 100% (fallthrough)
branch  7 taken 0% (throw)
        4:   65:    const size_type       s = 10;
        4:   66:    const value_type      v = 2;
        4:   67:    const pointer         b = x.allocate(s);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
        4:   68:    if (b != nullptr) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
        2:   69:        pointer e = b + s;
        2:   70:        pointer p = b;
        -:   71:        try {
       24:   72:            while (p != e) {
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
branch  2 taken 91%
branch  3 taken 9% (fallthrough)
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
       20:   73:                x.construct(p, v);
call    0 returned 100%
call    1 returned 100%
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
       20:   74:                ++p;}}
    =====:   75:        catch (...) {
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    =====:   76:            while (b != p) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    =====:   77:                --p;
    =====:   78:                x.destroy(p);}
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:   79:            x.deallocate(b, s);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:   80:            throw;}
call    0 never executed
call    1 never executed
        6:   81:        ASSERT_EQ(s, std::count(b, e, v));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
call   20 never executed
call   21 returned 100%
branch 22 taken 100%
branch 23 taken 0%
call   24 never executed
call   25 never executed
call   26 never executed
call   27 returned 100%
call   28 returned 100%
branch 29 taken 100% (fallthrough)
branch 30 taken 0% (throw)
call   31 returned 100%
branch 32 taken 0% (fallthrough)
branch 33 taken 100%
call   34 never executed
branch 35 never executed
branch 36 never executed
call   37 never executed
branch 38 never executed
branch 39 never executed
call   40 never executed
branch 41 never executed
branch 42 never executed
call   43 never executed
branch 44 never executed
branch 45 never executed
call   46 never executed
call   47 never executed
call   48 returned 100%
branch 49 taken 100%
branch 50 taken 0%
call   51 never executed
call   52 never executed
call   53 never executed
call   54 never executed
call   55 never executed
branch 56 never executed
branch 57 never executed
call   58 never executed
branch 59 never executed
branch 60 never executed
call   61 never executed
branch 62 never executed
branch 63 never executed
call   64 never executed
branch 65 never executed
branch 66 never executed
call   67 never executed
branch 68 never executed
branch 69 never executed
call   70 never executed
branch 71 never executed
branch 72 never executed
call   73 never executed
call   74 never executed
call   75 never executed
branch 76 never executed
branch 77 never executed
call   78 never executed
call   79 never executed
call   80 never executed
call   81 never executed
call   82 never executed
branch 83 never executed
branch 84 never executed
call   85 never executed
branch 86 never executed
branch 87 never executed
call   88 never executed
branch 89 never executed
branch 90 never executed
call   91 never executed
branch 92 never executed
branch 93 never executed
call   94 never executed
branch 95 never executed
branch 96 never executed
call   97 never executed
branch 98 never executed
branch 99 never executed
call   100 never executed
call   101 never executed
call   102 never executed
branch 103 never executed
branch 104 never executed
call   105 never executed
call   106 never executed
call   107 never executed
       24:   82:        while (b != e) {
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
branch  2 taken 91%
branch  3 taken 9% (fallthrough)
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
       20:   83:            --e;
       20:   84:            x.destroy(e);}
call    0 returned 100%
call    1 returned 100%
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
        2:   85:        x.deallocate(b, s);}}
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100%
branch  3 taken 0%
call    4 never executed
call    5 returned 100%
call    6 returned 100%
branch  7 taken 100%
branch  8 taken 0%
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
        -:   86:
        -:   87:// --------------
        -:   88:// TestAllocator2
        -:   89:// --------------
        -:   90:
function _ZN31TestAllocator2_const_index_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN31TestAllocator2_const_index_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN31TestAllocator2_const_index_Test8TestBodyEv called 1 returned 100% blocks executed 43%
function _ZN31TestAllocator2_const_index_TestC2Ev called 1 returned 100% blocks executed 100%
        5:   91:TEST(TestAllocator2, const_index) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        1:   92:    const Allocator<int, 100> x;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   93:    ASSERT_EQ(x[0], 92);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
call   20 never executed
call   21 returned 100%
branch 22 taken 100%
branch 23 taken 0%
call   24 never executed
call   25 never executed
call   26 never executed
        -:   94:}
function _ZN25TestAllocator2_index_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN25TestAllocator2_index_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN25TestAllocator2_index_Test8TestBodyEv called 1 returned 100% blocks executed 43%
function _ZN25TestAllocator2_index_TestC2Ev called 1 returned 100% blocks executed 100%
        5:   95:TEST(TestAllocator2, index) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        1:   96:    Allocator<int, 100> x;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   97:    ASSERT_EQ(x[0], 92);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
call   20 never executed
call   21 returned 100%
branch 22 taken 100%
branch 23 taken 0%
call   24 never executed
call   25 never executed
call   26 never executed
        -:   98:}
        -:   99:
        -:  100:
        -:  101:// --------------
        -:  102:// TestAllocator3
        -:  103:// --------------
        -:  104:
        -:  105:template <typename A>
function _ZN14TestAllocator3I9AllocatorIiLm100EEED0Ev called 0 returned 0% blocks executed 0%
function _ZN14TestAllocator3I9AllocatorIiLm100EEED2Ev called 2 returned 100% blocks executed 75%
function _ZN14TestAllocator3I9AllocatorIiLm100EEEC2Ev called 2 returned 100% blocks executed 100%
function _ZN14TestAllocator3I9AllocatorIdLm100EEED0Ev called 0 returned 0% blocks executed 0%
function _ZN14TestAllocator3I9AllocatorIdLm100EEED2Ev called 2 returned 100% blocks executed 75%
function _ZN14TestAllocator3I9AllocatorIdLm100EEEC2Ev called 2 returned 100% blocks executed 100%
        8:  106:struct TestAllocator3 : testing::Test {
call    0 never executed
call    1 never executed
call    2 returned 100%
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
call    6 returned 100%
call    7 never executed
call    8 never executed
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
call   13 returned 100%
        -:  107:    // --------
        -:  108:    // typedefs
        -:  109:    // --------
        -:  110:
        -:  111:    typedef          A             allocator_type;
        -:  112:    typedef typename A::value_type value_type;
        -:  113:    typedef typename A::size_type  size_type;
        -:  114:    typedef typename A::pointer    pointer;};
        -:  115:
        -:  116:typedef testing::Types<
        -:  117:            Allocator<int,    100>,
        -:  118:            Allocator<double, 100> >
        -:  119:        my_types_2;
        -:  120:
        -:  121:TYPED_TEST_CASE(TestAllocator3, my_types_2);
        -:  122:
function _ZN26TestAllocator3_test_1_TestI9AllocatorIiLm100EEE8TestBodyEv called 1 returned 100% blocks executed 19%
function _ZN26TestAllocator3_test_1_TestI9AllocatorIdLm100EEE8TestBodyEv called 1 returned 100% blocks executed 19%
function _ZN26TestAllocator3_test_1_TestI9AllocatorIiLm100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN26TestAllocator3_test_1_TestI9AllocatorIiLm100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN26TestAllocator3_test_1_TestI9AllocatorIdLm100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN26TestAllocator3_test_1_TestI9AllocatorIdLm100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN26TestAllocator3_test_1_TestI9AllocatorIiLm100EEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN26TestAllocator3_test_1_TestI9AllocatorIdLm100EEEC2Ev called 1 returned 100% blocks executed 100%
        9:  123:TYPED_TEST(TestAllocator3, test_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
call   12 returned 100%
call   13 returned 100%
call   14 returned 100%
        -:  124:    typedef typename TestFixture::allocator_type allocator_type;
        -:  125:    typedef typename TestFixture::value_type     value_type;
        -:  126:    typedef typename TestFixture::size_type      size_type;
        -:  127:    typedef typename TestFixture::pointer        pointer;
        -:  128:
        2:  129:          allocator_type x;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        2:  130:    const size_type      s = 1;
        2:  131:    const value_type     v = 2;
        2:  132:    const pointer        p = x.allocate(s);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        2:  133:    if (p != nullptr) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
    #####:  134:        x.construct(p, v);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        2:  135:        ASSERT_EQ(v, *p);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
branch 27 never executed
branch 28 never executed
call   29 never executed
branch 30 never executed
branch 31 never executed
call   32 never executed
branch 33 never executed
branch 34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
call   38 never executed
branch 39 never executed
branch 40 never executed
call   41 never executed
branch 42 never executed
branch 43 never executed
call   44 never executed
call   45 never executed
call   46 never executed
branch 47 never executed
branch 48 never executed
call   49 never executed
call   50 never executed
call   51 never executed
    #####:  136:        x.destroy(p);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  137:        x.deallocate(p, s);}}
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:  138:
function _ZN27TestAllocator3_test_10_TestI9AllocatorIiLm100EEE8TestBodyEv called 1 returned 100% blocks executed 13%
function _ZN27TestAllocator3_test_10_TestI9AllocatorIdLm100EEE8TestBodyEv called 1 returned 100% blocks executed 13%
function _ZN27TestAllocator3_test_10_TestI9AllocatorIiLm100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN27TestAllocator3_test_10_TestI9AllocatorIiLm100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN27TestAllocator3_test_10_TestI9AllocatorIdLm100EEED0Ev called 1 returned 100% blocks executed 100%
function _ZN27TestAllocator3_test_10_TestI9AllocatorIdLm100EEED2Ev called 1 returned 100% blocks executed 75%
function _ZN27TestAllocator3_test_10_TestI9AllocatorIiLm100EEEC2Ev called 1 returned 100% blocks executed 100%
function _ZN27TestAllocator3_test_10_TestI9AllocatorIdLm100EEEC2Ev called 1 returned 100% blocks executed 100%
        9:  139:TYPED_TEST(TestAllocator3, test_10) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
call    5 never executed
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
call   12 returned 100%
call   13 returned 100%
call   14 returned 100%
        -:  140:    typedef typename TestFixture::allocator_type allocator_type;
        -:  141:    typedef typename TestFixture::value_type     value_type;
        -:  142:    typedef typename TestFixture::size_type      size_type;
        -:  143:    typedef typename TestFixture::pointer        pointer;
        -:  144:
        2:  145:          allocator_type x;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        2:  146:    const size_type      s = 10;
        2:  147:    const value_type     v = 2;
        2:  148:    const pointer        b = x.allocate(s);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        2:  149:    if (b != nullptr) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
    #####:  150:        pointer e = b + s;
    #####:  151:        pointer p = b;
        -:  152:        try {
    #####:  153:            while (p != e) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  154:                x.construct(p, v);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  155:                ++p;}}
    =====:  156:        catch (...) {
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    =====:  157:            while (b != p) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    =====:  158:                --p;
    =====:  159:                x.destroy(p);}
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:  160:            x.deallocate(b, s);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
    =====:  161:            throw;}
call    0 never executed
call    1 never executed
        2:  162:        ASSERT_EQ(s, std::count(b, e, v));
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
branch 29 never executed
branch 30 never executed
call   31 never executed
branch 32 never executed
branch 33 never executed
call   34 never executed
branch 35 never executed
branch 36 never executed
call   37 never executed
branch 38 never executed
branch 39 never executed
call   40 never executed
branch 41 never executed
branch 42 never executed
call   43 never executed
branch 44 never executed
branch 45 never executed
call   46 never executed
call   47 never executed
call   48 never executed
branch 49 never executed
branch 50 never executed
call   51 never executed
call   52 never executed
call   53 never executed
    #####:  163:        while (b != e) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  164:            --e;
    #####:  165:            x.destroy(e);}
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
function _GLOBAL__sub_I__Z10intToBytesi called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
        3:  166:        x.deallocate(b, s);}}
call    0 returned 100%
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
branch  7 taken 100% (fallthrough)
branch  8 taken 0%
branch  9 taken 100% (fallthrough)
branch 10 taken 0%
        -:  167:
